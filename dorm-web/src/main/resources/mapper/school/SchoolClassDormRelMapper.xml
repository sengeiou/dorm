<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.waken.dorm.dao.school.SchoolClassDormRelMapper">
  <resultMap id="BaseResultMap" type="com.waken.dorm.common.entity.school.SchoolClassDormRel">
    <id column="pk_school_class_dorm_id" jdbcType="VARCHAR" property="pkSchoolClassDormId" />
    <result column="school_class_id" jdbcType="VARCHAR" property="schoolClassId" />
    <result column="dorm_id" jdbcType="VARCHAR" property="dormId" />
    <result column="status" jdbcType="INTEGER" property="status" />
    <result column="create_time" jdbcType="TIMESTAMP" property="createTime" />
    <result column="create_user_id" jdbcType="VARCHAR" property="createUserId" />
    <result column="last_modify_time" jdbcType="TIMESTAMP" property="lastModifyTime" />
    <result column="last_modify_user_id" jdbcType="VARCHAR" property="lastModifyUserId" />
    <result column="memo" jdbcType="VARCHAR" property="memo" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    pk_school_class_dorm_id, school_class_id, dorm_id, status, create_time, create_user_id, 
    last_modify_time, last_modify_user_id, memo
  </sql>
  <select id="selectByExample" parameterType="com.waken.dorm.common.entity.school.SchoolClassDormRelExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    'true' as QUERYID,
    <include refid="Base_Column_List" />
    from rm_school_class_dorm_rel
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.String" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from rm_school_class_dorm_rel
    where pk_school_class_dorm_id = #{pkSchoolClassDormId,jdbcType=VARCHAR}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.String">
    delete from rm_school_class_dorm_rel
    where pk_school_class_dorm_id = #{pkSchoolClassDormId,jdbcType=VARCHAR}
  </delete>
  <delete id="deleteByExample" parameterType="com.waken.dorm.common.entity.school.SchoolClassDormRelExample">
    delete from rm_school_class_dorm_rel
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.waken.dorm.common.entity.school.SchoolClassDormRel">
    insert into rm_school_class_dorm_rel (pk_school_class_dorm_id, school_class_id, 
      dorm_id, status, create_time, 
      create_user_id, last_modify_time, last_modify_user_id, 
      memo)
    values (#{pkSchoolClassDormId,jdbcType=VARCHAR}, #{schoolClassId,jdbcType=VARCHAR}, 
      #{dormId,jdbcType=VARCHAR}, #{status,jdbcType=INTEGER}, #{createTime,jdbcType=TIMESTAMP}, 
      #{createUserId,jdbcType=VARCHAR}, #{lastModifyTime,jdbcType=TIMESTAMP}, #{lastModifyUserId,jdbcType=VARCHAR}, 
      #{memo,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.waken.dorm.common.entity.school.SchoolClassDormRel">
    insert into rm_school_class_dorm_rel
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="pkSchoolClassDormId != null">
        pk_school_class_dorm_id,
      </if>
      <if test="schoolClassId != null">
        school_class_id,
      </if>
      <if test="dormId != null">
        dorm_id,
      </if>
      <if test="status != null">
        status,
      </if>
      <if test="createTime != null">
        create_time,
      </if>
      <if test="createUserId != null">
        create_user_id,
      </if>
      <if test="lastModifyTime != null">
        last_modify_time,
      </if>
      <if test="lastModifyUserId != null">
        last_modify_user_id,
      </if>
      <if test="memo != null">
        memo,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="pkSchoolClassDormId != null">
        #{pkSchoolClassDormId,jdbcType=VARCHAR},
      </if>
      <if test="schoolClassId != null">
        #{schoolClassId,jdbcType=VARCHAR},
      </if>
      <if test="dormId != null">
        #{dormId,jdbcType=VARCHAR},
      </if>
      <if test="status != null">
        #{status,jdbcType=INTEGER},
      </if>
      <if test="createTime != null">
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="createUserId != null">
        #{createUserId,jdbcType=VARCHAR},
      </if>
      <if test="lastModifyTime != null">
        #{lastModifyTime,jdbcType=TIMESTAMP},
      </if>
      <if test="lastModifyUserId != null">
        #{lastModifyUserId,jdbcType=VARCHAR},
      </if>
      <if test="memo != null">
        #{memo,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.waken.dorm.common.entity.school.SchoolClassDormRelExample" resultType="java.lang.Integer">
    select count(*) from rm_school_class_dorm_rel
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update rm_school_class_dorm_rel
    <set>
      <if test="record.pkSchoolClassDormId != null">
        pk_school_class_dorm_id = #{record.pkSchoolClassDormId,jdbcType=VARCHAR},
      </if>
      <if test="record.schoolClassId != null">
        school_class_id = #{record.schoolClassId,jdbcType=VARCHAR},
      </if>
      <if test="record.dormId != null">
        dorm_id = #{record.dormId,jdbcType=VARCHAR},
      </if>
      <if test="record.status != null">
        status = #{record.status,jdbcType=INTEGER},
      </if>
      <if test="record.createTime != null">
        create_time = #{record.createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.createUserId != null">
        create_user_id = #{record.createUserId,jdbcType=VARCHAR},
      </if>
      <if test="record.lastModifyTime != null">
        last_modify_time = #{record.lastModifyTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.lastModifyUserId != null">
        last_modify_user_id = #{record.lastModifyUserId,jdbcType=VARCHAR},
      </if>
      <if test="record.memo != null">
        memo = #{record.memo,jdbcType=VARCHAR},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update rm_school_class_dorm_rel
    set pk_school_class_dorm_id = #{record.pkSchoolClassDormId,jdbcType=VARCHAR},
      school_class_id = #{record.schoolClassId,jdbcType=VARCHAR},
      dorm_id = #{record.dormId,jdbcType=VARCHAR},
      status = #{record.status,jdbcType=INTEGER},
      create_time = #{record.createTime,jdbcType=TIMESTAMP},
      create_user_id = #{record.createUserId,jdbcType=VARCHAR},
      last_modify_time = #{record.lastModifyTime,jdbcType=TIMESTAMP},
      last_modify_user_id = #{record.lastModifyUserId,jdbcType=VARCHAR},
      memo = #{record.memo,jdbcType=VARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.waken.dorm.common.entity.school.SchoolClassDormRel">
    update rm_school_class_dorm_rel
    <set>
      <if test="schoolClassId != null">
        school_class_id = #{schoolClassId,jdbcType=VARCHAR},
      </if>
      <if test="dormId != null">
        dorm_id = #{dormId,jdbcType=VARCHAR},
      </if>
      <if test="status != null">
        status = #{status,jdbcType=INTEGER},
      </if>
      <if test="createTime != null">
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="createUserId != null">
        create_user_id = #{createUserId,jdbcType=VARCHAR},
      </if>
      <if test="lastModifyTime != null">
        last_modify_time = #{lastModifyTime,jdbcType=TIMESTAMP},
      </if>
      <if test="lastModifyUserId != null">
        last_modify_user_id = #{lastModifyUserId,jdbcType=VARCHAR},
      </if>
      <if test="memo != null">
        memo = #{memo,jdbcType=VARCHAR},
      </if>
    </set>
    where pk_school_class_dorm_id = #{pkSchoolClassDormId,jdbcType=VARCHAR}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.waken.dorm.common.entity.school.SchoolClassDormRel">
    update rm_school_class_dorm_rel
    set school_class_id = #{schoolClassId,jdbcType=VARCHAR},
      dorm_id = #{dormId,jdbcType=VARCHAR},
      status = #{status,jdbcType=INTEGER},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      create_user_id = #{createUserId,jdbcType=VARCHAR},
      last_modify_time = #{lastModifyTime,jdbcType=TIMESTAMP},
      last_modify_user_id = #{lastModifyUserId,jdbcType=VARCHAR},
      memo = #{memo,jdbcType=VARCHAR}
    where pk_school_class_dorm_id = #{pkSchoolClassDormId,jdbcType=VARCHAR}
  </update>
</mapper>
<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.waken.dorm.dao.school.SchoolClassMapper" >
  <resultMap id="BaseResultMap" type="com.waken.dorm.common.entity.school.SchoolClass" >
    <id column="pk_school_class_id" property="pkSchoolClassId" jdbcType="VARCHAR" />
    <result column="school_id" property="schoolId" jdbcType="VARCHAR" />
    <result column="parent_id" property="parentId" jdbcType="VARCHAR" />
    <result column="class_name" property="className" jdbcType="VARCHAR" />
    <result column="class_desc" property="classDesc" jdbcType="VARCHAR" />
    <result column="class_no" property="classNo" jdbcType="INTEGER" />
    <result column="status" property="status" jdbcType="INTEGER" />
    <result column="create_time" property="createTime" jdbcType="TIMESTAMP" />
    <result column="create_user_id" property="createUserId" jdbcType="VARCHAR" />
    <result column="last_modify_time" property="lastModifyTime" jdbcType="TIMESTAMP" />
    <result column="last_modify_user_id" property="lastModifyUserId" jdbcType="VARCHAR" />
    <result column="memo" property="memo" jdbcType="VARCHAR" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    pk_school_class_id, school_id, parent_id, class_name, class_desc, class_no, status, 
    create_time, create_user_id, last_modify_time, last_modify_user_id, memo
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.waken.dorm.common.entity.school.SchoolClassExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    'true' as QUERYID,
    <include refid="Base_Column_List" />
    from rm_school_class
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.String" >
    select 
    <include refid="Base_Column_List" />
    from rm_school_class
    where pk_school_class_id = #{pkSchoolClassId,jdbcType=VARCHAR}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.String" >
    delete from rm_school_class
    where pk_school_class_id = #{pkSchoolClassId,jdbcType=VARCHAR}
  </delete>
  <delete id="deleteByExample" parameterType="com.waken.dorm.common.entity.school.SchoolClassExample" >
    delete from rm_school_class
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.waken.dorm.common.entity.school.SchoolClass" >
    insert into rm_school_class (pk_school_class_id, school_id, parent_id, 
      class_name, class_desc, class_no, 
      status, create_time, create_user_id, 
      last_modify_time, last_modify_user_id, memo
      )
    values (#{pkSchoolClassId,jdbcType=VARCHAR}, #{schoolId,jdbcType=VARCHAR}, #{parentId,jdbcType=VARCHAR}, 
      #{className,jdbcType=VARCHAR}, #{classDesc,jdbcType=VARCHAR}, #{classNo,jdbcType=INTEGER}, 
      #{status,jdbcType=INTEGER}, #{createTime,jdbcType=TIMESTAMP}, #{createUserId,jdbcType=VARCHAR}, 
      #{lastModifyTime,jdbcType=TIMESTAMP}, #{lastModifyUserId,jdbcType=VARCHAR}, #{memo,jdbcType=VARCHAR}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.waken.dorm.common.entity.school.SchoolClass" >
    insert into rm_school_class
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="pkSchoolClassId != null" >
        pk_school_class_id,
      </if>
      <if test="schoolId != null" >
        school_id,
      </if>
      <if test="parentId != null" >
        parent_id,
      </if>
      <if test="className != null" >
        class_name,
      </if>
      <if test="classDesc != null" >
        class_desc,
      </if>
      <if test="classNo != null" >
        class_no,
      </if>
      <if test="status != null" >
        status,
      </if>
      <if test="createTime != null" >
        create_time,
      </if>
      <if test="createUserId != null" >
        create_user_id,
      </if>
      <if test="lastModifyTime != null" >
        last_modify_time,
      </if>
      <if test="lastModifyUserId != null" >
        last_modify_user_id,
      </if>
      <if test="memo != null" >
        memo,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="pkSchoolClassId != null" >
        #{pkSchoolClassId,jdbcType=VARCHAR},
      </if>
      <if test="schoolId != null" >
        #{schoolId,jdbcType=VARCHAR},
      </if>
      <if test="parentId != null" >
        #{parentId,jdbcType=VARCHAR},
      </if>
      <if test="className != null" >
        #{className,jdbcType=VARCHAR},
      </if>
      <if test="classDesc != null" >
        #{classDesc,jdbcType=VARCHAR},
      </if>
      <if test="classNo != null" >
        #{classNo,jdbcType=INTEGER},
      </if>
      <if test="status != null" >
        #{status,jdbcType=INTEGER},
      </if>
      <if test="createTime != null" >
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="createUserId != null" >
        #{createUserId,jdbcType=VARCHAR},
      </if>
      <if test="lastModifyTime != null" >
        #{lastModifyTime,jdbcType=TIMESTAMP},
      </if>
      <if test="lastModifyUserId != null" >
        #{lastModifyUserId,jdbcType=VARCHAR},
      </if>
      <if test="memo != null" >
        #{memo,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.waken.dorm.common.entity.school.SchoolClassExample" resultType="java.lang.Integer" >
    select count(*) from rm_school_class
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update rm_school_class
    <set >
      <if test="record.pkSchoolClassId != null" >
        pk_school_class_id = #{record.pkSchoolClassId,jdbcType=VARCHAR},
      </if>
      <if test="record.schoolId != null" >
        school_id = #{record.schoolId,jdbcType=VARCHAR},
      </if>
      <if test="record.parentId != null" >
        parent_id = #{record.parentId,jdbcType=VARCHAR},
      </if>
      <if test="record.className != null" >
        class_name = #{record.className,jdbcType=VARCHAR},
      </if>
      <if test="record.classDesc != null" >
        class_desc = #{record.classDesc,jdbcType=VARCHAR},
      </if>
      <if test="record.classNo != null" >
        class_no = #{record.classNo,jdbcType=INTEGER},
      </if>
      <if test="record.status != null" >
        status = #{record.status,jdbcType=INTEGER},
      </if>
      <if test="record.createTime != null" >
        create_time = #{record.createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.createUserId != null" >
        create_user_id = #{record.createUserId,jdbcType=VARCHAR},
      </if>
      <if test="record.lastModifyTime != null" >
        last_modify_time = #{record.lastModifyTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.lastModifyUserId != null" >
        last_modify_user_id = #{record.lastModifyUserId,jdbcType=VARCHAR},
      </if>
      <if test="record.memo != null" >
        memo = #{record.memo,jdbcType=VARCHAR},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update rm_school_class
    set pk_school_class_id = #{record.pkSchoolClassId,jdbcType=VARCHAR},
      school_id = #{record.schoolId,jdbcType=VARCHAR},
      parent_id = #{record.parentId,jdbcType=VARCHAR},
      class_name = #{record.className,jdbcType=VARCHAR},
      class_desc = #{record.classDesc,jdbcType=VARCHAR},
      class_no = #{record.classNo,jdbcType=INTEGER},
      status = #{record.status,jdbcType=INTEGER},
      create_time = #{record.createTime,jdbcType=TIMESTAMP},
      create_user_id = #{record.createUserId,jdbcType=VARCHAR},
      last_modify_time = #{record.lastModifyTime,jdbcType=TIMESTAMP},
      last_modify_user_id = #{record.lastModifyUserId,jdbcType=VARCHAR},
      memo = #{record.memo,jdbcType=VARCHAR}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.waken.dorm.common.entity.school.SchoolClass" >
    update rm_school_class
    <set >
      <if test="schoolId != null" >
        school_id = #{schoolId,jdbcType=VARCHAR},
      </if>
      <if test="parentId != null" >
        parent_id = #{parentId,jdbcType=VARCHAR},
      </if>
      <if test="className != null" >
        class_name = #{className,jdbcType=VARCHAR},
      </if>
      <if test="classDesc != null" >
        class_desc = #{classDesc,jdbcType=VARCHAR},
      </if>
      <if test="classNo != null" >
        class_no = #{classNo,jdbcType=INTEGER},
      </if>
      <if test="status != null" >
        status = #{status,jdbcType=INTEGER},
      </if>
      <if test="createTime != null" >
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="createUserId != null" >
        create_user_id = #{createUserId,jdbcType=VARCHAR},
      </if>
      <if test="lastModifyTime != null" >
        last_modify_time = #{lastModifyTime,jdbcType=TIMESTAMP},
      </if>
      <if test="lastModifyUserId != null" >
        last_modify_user_id = #{lastModifyUserId,jdbcType=VARCHAR},
      </if>
      <if test="memo != null" >
        memo = #{memo,jdbcType=VARCHAR},
      </if>
    </set>
    where pk_school_class_id = #{pkSchoolClassId,jdbcType=VARCHAR}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.waken.dorm.common.entity.school.SchoolClass" >
    update rm_school_class
    set school_id = #{schoolId,jdbcType=VARCHAR},
      parent_id = #{parentId,jdbcType=VARCHAR},
      class_name = #{className,jdbcType=VARCHAR},
      class_desc = #{classDesc,jdbcType=VARCHAR},
      class_no = #{classNo,jdbcType=INTEGER},
      status = #{status,jdbcType=INTEGER},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      create_user_id = #{createUserId,jdbcType=VARCHAR},
      last_modify_time = #{lastModifyTime,jdbcType=TIMESTAMP},
      last_modify_user_id = #{lastModifyUserId,jdbcType=VARCHAR},
      memo = #{memo,jdbcType=VARCHAR}
    where pk_school_class_id = #{pkSchoolClassId,jdbcType=VARCHAR}
  </update>
  <select id="selectByIds" resultMap="BaseResultMap">
    select
    <include refid="Base_Column_List" />
    from rm_school_class
    where pk_school_class_id in
    <foreach collection="Ids" item="dramaId" open="(" close=")" separator=",">
      #{dramaId}
    </foreach>
  </select>
  <select id="listSchoolClasses" parameterType="com.waken.dorm.common.form.school.SchoolClassForm" resultType="com.waken.dorm.common.view.school.SchoolClassView">
    SELECT
    sc.pk_school_class_id AS pkSchoolClassId,
    sc.class_name AS className,
    sc.parent_id AS parentId
    FROM rm_school_class sc
    WHERE 1=1
    <if test="pkSchoolClassId != null and pkSchoolClassId != ''">
      and sc.pk_school_class_id=#{pkSchoolClassId}
    </if>
    <if test="schoolId != null and schoolId != ''">
      and sc.school_id=#{schoolId}
    </if>
    <if test="className != null and className != ''">
      and sc.class_name like '%${className}%'
    </if>
    <if test="status != null">
      and s.status=#{status}
    </if>
    ORDER BY
    sc.create_time
  </select>
  <update id="batchUpdateStatus" parameterType="java.util.Map">
    <foreach collection="list" separator=";" item="ur">
      update rm_school_class set
      status = #{ur.status},
      last_modify_time = #{ur.lastModifyTime},
      last_modify_user_id = #{ur.lastModifyUserId}
      where pk_school_class_id = #{ur.pkId}
    </foreach>
  </update>
</mapper>